@using Microsoft.AspNet.Identity
@using System.Security.Claims

@if (Request.IsAuthenticated)
{
    @* UPRAVLJANJE CLAIMS-IMA *@
    // Dohvaćamo identity korisnika (pomoću njega možemo koristit korisne funkcije)
    var identity = (ClaimsIdentity)User.Identity;

    // GivenName je claim koji smo podesili u AccountControlleru (stvara se kada se kreira korisnik)
    // Ovi upitnici znače - Ako je vrijednost GivenName-a null, onda dohvati GetUserName() (to je metoda ugrađena)
    var name = identity.FindFirstValue(ClaimTypes.GivenName) ?? identity.GetUserName();

    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    @Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
        <li>                     
            @*Ovdje smo zamjenili User.Identity.GetUserName(); sa user (iznad komentirano) kako nebi 
                displayali ime uneseno u registraciji, a ne Username ili Email. *@
            @Html.ActionLink(name, "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
        </li>
        <li><a href="javascript:document.getElementById('logoutForm').submit()">Odjavi se</a></li>
    </ul>
    } // automatski se stavlja </form> ovdje - (using)
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Registracija", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Prijava", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
